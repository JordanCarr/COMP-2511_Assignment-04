{"version":3,"sources":["../../js/functionality.js"],"names":["cardValues","selectedCards","valueToBeat","playerTurnValue","playerName","$","document","ready","submit","initialiseGame","e","preventDefault","loadPlayers","setupGame","setupPlayerTurn","setupTopArea","setupEndGame","remove","css","val","html","playerNumber","loadCards","post","done","deck","parseJSON","data","Cards","value","i","length","cardIndex","card","resetCard","addClass","click","cardSetup","playerTurn","off","map","removeClass","setupEndTurn","target","id","substr","selectCard","console","log","alert","window","location","reload","sumOfSelectedCards","sum","changeTurn","endTurnButton","endTurn","playerScoreDisplay","currentScore","parseInt","resetSelected","playerScores"],"mappings":"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","file":"functionality.js","sourcesContent":["/**\r\n * Created by Jordan Carr on 2017-03-28.\r\n */\r\nlet cardValues = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nlet selectedCards = [false, false, false, false, false, false, false, false, false, false];\r\nlet valueToBeat = 0;\r\nlet playerTurnValue = 0;\r\nconst playerName = [\"\", \"\"];\r\n\r\n$(document).ready(() => $(\"form.newGameForm\").submit(e => initialiseGame(e)));\r\n\r\nfunction initialiseGame(e) {\r\n    e.preventDefault();\r\n    loadPlayers();\r\n    setupGame();\r\n}\r\n\r\nfunction setupGame() {\r\n    setupPlayerTurn(playerTurnValue);\r\n    setupTopArea();\r\n    setupEndGame();\r\n}\r\n\r\nfunction setupTopArea() {\r\n    $(\"#NewGame\").remove();\r\n    $(\"#Score\").css(\"width\", \"33%\");\r\n    $(\".scoreBoard div:nth-child(2n)\").css(\"width\", \"50%\");\r\n    $(\".scoreBoard div:not(:nth-child(2n))\").css(\"width\", \"50%\");\r\n    $(\"#ValueToReach\").css(\"width\", \"34%\");\r\n    $(\"#EndGame\").css(\"width\", \"33%\");\r\n}\r\n\r\n// Set player display to show input names and initialise player 1's turn\r\nfunction loadPlayers() {\r\n    playerName[0] = $(\"#Player1Name\").val();\r\n    playerName[1] = $(\"#Player2Name\").val();\r\n    $(\"#Player1NameDisplay\").html(playerName[0]);\r\n    $(\"#Player2NameDisplay\").html(playerName[1]);\r\n}\r\n\r\nfunction setupPlayerTurn(playerNumber) {\r\n    loadCards(playerNumber);\r\n}\r\n\r\nfunction loadCards(playerNumber) {\r\n    $.post(\"http://ins.mtroyal.ca/~nkhemka/test/process.php\").done(data => {\r\n        // convert POST response to a JAVASCRIPT OBJECT/variable\r\n        const deck = $.parseJSON(data);\r\n        /** @namespace deck.Cards */\r\n        valueToBeat = deck.Cards[0].value;\r\n        // putting all 10 card values from POST into the ARRAY- this is our game memory\r\n        for (let i = 0; i < cardValues.length; i++) {\r\n            cardValues[i] = deck.Cards[i + 1].value;\r\n        }\r\n        // we are creating events for each card -- the way you will identify what card you have clicked\r\n        for (let cardIndex = 0; cardIndex < cardValues.length; cardIndex++) {\r\n            const card = $(\"#Card\" + cardIndex);\r\n            resetCard(card);\r\n            card.addClass(`card${cardValues[cardIndex]}`);\r\n            card.click(cardSetup);\r\n        }\r\n        playerTurn(playerNumber);\r\n        $(\".cardArea\").css(\"visibility\", \"visible\");\r\n    });\r\n}\r\n\r\nfunction resetCard(card) {\r\n    card.off(\"click\", cardSetup);\r\n    card.css(\"background-color\", \"\");\r\n    [0, 1, 2, 3, 4].map(i => card.removeClass('card' + i));\r\n}\r\n\r\nfunction playerTurn(playerNumber) {\r\n    setupEndTurn();\r\n    $(\"#PlayerMove\").html(`${playerName[playerNumber]}, value to beat: `);\r\n    $(\"#Move\").html(valueToBeat);\r\n}\r\n\r\nfunction cardSetup(e) {\r\n    const cardIndex = e.target.id.substr(4, 1);\r\n    const card = $(e.target);\r\n    selectCard(cardIndex, card);\r\n    console.log(\"You clicked card: \" + cardIndex);\r\n    console.log(\"This card has a value of: \" + cardValues[cardIndex])\r\n}\r\n\r\nfunction selectCard(cardIndex, card) {\r\n    // Store Card Selected Value\r\n    selectedCards[cardIndex] = !selectedCards[cardIndex];\r\n    // Change Colour\r\n    switch (card.css(\"background-color\")) {\r\n        // blue = #0288D1, rgb(2, 136, 209)\r\n        // red  = #F44336, rgb(244, 67, 54)\r\n        case \"rgb(2, 136, 209)\": // blue\r\n            card.css(\"background-color\", \"#F44336\"); // red\r\n            break;\r\n        case \"rgb(244, 67, 54)\": // red\r\n            card.css(\"background-color\", \"\"); //un-sets colour\r\n            break;\r\n        default:\r\n            alert(\"Something went horribly wrong with the style sheet. Reloading\");\r\n            window.location.reload();\r\n    }\r\n}\r\n\r\nfunction sumOfSelectedCards() {\r\n    let sum = 0;\r\n    for (let i = 0; i < selectedCards.length; i++) {\r\n        if (true === selectedCards[i]) {\r\n            sum += cardValues[i];\r\n        }\r\n    }\r\n    return sum;\r\n}\r\n\r\nfunction changeTurn() {\r\n    playerTurnValue = (playerTurnValue + 1) % 2\r\n}\r\n\r\nfunction setupEndTurn() {\r\n    let endTurnButton = $(\"#EndTurnButton\");\r\n    endTurnButton.off(\"click\", endTurn);\r\n    endTurnButton.click(endTurn)\r\n}\r\n\r\nfunction endTurn() {\r\n    let sum = sumOfSelectedCards();\r\n    if (sum > valueToBeat) {\r\n        let playerScoreDisplay = $(`#Player${playerTurnValue + 1}ScoreDisplay`);\r\n        let currentScore = playerScoreDisplay.html();\r\n        playerScoreDisplay.html(parseInt(currentScore) + 10);\r\n        changeTurn();\r\n        alert(`You are correct, you score 10 points, now it's ${playerName[playerTurnValue]}'s turn`);\r\n        setupPlayerTurn(playerTurnValue)\r\n    } else {\r\n        changeTurn();\r\n        alert(`You are incorrect, you score 0 points, now it's ${playerName[playerTurnValue]}'s turn`);\r\n        setupPlayerTurn(playerTurnValue)\r\n    }\r\n    resetSelected();\r\n    setupGame()\r\n}\r\n\r\nfunction resetSelected() {\r\n    selectedCards.map(card => false);\r\n}\r\n\r\nfunction setupEndGame() {\r\n    $(\"#EndGameButton\").click(() => {\r\n        let playerScores = [\r\n            parseInt($(\"#Player1ScoreDisplay\").html()),\r\n            parseInt($(\"#Player2ScoreDisplay\").html())\r\n        ];\r\n\r\n        if (playerScores[0] > playerScores[1]) {\r\n            alert(`${playerName[0]} Wins`);\r\n        } else if (playerScores[1] > playerScores[0]) {\r\n            alert(`${playerName[1]} Wins`);\r\n        } else {\r\n            alert(`${playerName[0]} and ${playerName[1]} tied`);\r\n        }\r\n\r\n        window.location.reload()\r\n    });\r\n}\r\n"]}