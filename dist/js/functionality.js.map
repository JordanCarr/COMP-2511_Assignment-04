{"version":3,"sources":["../../js/functionality.js"],"names":["cardValues","selectedCards","valueToBeat","playerTurnValue","playerName","$","document","ready","submit","e","loadPlayers","setupEndGame","preventDefault","val","html","setupPlayerTurn","playerNumber","loadCards","post","done","data","deck","parseJSON","Cards","value","i","length","cardIndex","card","off","cardSetup","css","click","playerTurn","setupEndTurn","target","id","substr","selectCard","console","log","sumOfSelectedCards","sum","changeTurn","endTurnButton","endTurn","playerScoreDisplay","alert","resetSelected","window","location","reload"],"mappings":"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","file":"functionality.js","sourcesContent":["/**\r\n * Created by Jordan Carr on 2017-03-28.\r\n */\r\nlet cardValues = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nlet selectedCards = [false, false, false, false, false, false, false, false, false, false];\r\nlet valueToBeat = 0;\r\nlet playerTurnValue = 0;\r\nlet playerName = [\"\", \"\"];\r\n\r\n$(document).ready(function () {\r\n\r\n    // On player name submission setup game with players, cards, etc...\r\n    $(\"form.newGameForm\").submit(function (e) {\r\n        loadPlayers();\r\n        setupEndGame();\r\n        e.preventDefault();\r\n    });\r\n});\r\n\r\n// Set player display to show input names and initialise player 1's turn\r\nfunction loadPlayers() {\r\n    playerName[0] = $(\"#Player1Name\").val();\r\n    playerName[1] = $(\"#Player2Name\").val();\r\n    $(\"#Player1NameDisplay\").html(playerName[0]);\r\n    $(\"#Player2NameDisplay\").html(playerName[1]);\r\n\r\n    //Game starts with player 1's turn which has an index of 0\r\n    setupPlayerTurn(playerTurnValue);\r\n}\r\n\r\nfunction setupPlayerTurn(playerNumber) {\r\n    loadCards(playerNumber);\r\n}\r\n\r\nfunction loadCards(playerNumber) {\r\n    $.post(\"http://ins.mtroyal.ca/~nkhemka/test/process.php\").done(function (data) {\r\n        // convert POST response to a JAVASCRIPT OBJECT/variable\r\n        const deck = $.parseJSON(data);\r\n        /** @namespace deck.Cards */\r\n        valueToBeat = deck.Cards[0].value;\r\n        // putting all 10 card values from POST into the ARRAY- this is our game memory\r\n        for (let i = 0; i < cardValues.length; i++) {\r\n            cardValues[i] = deck.Cards[i + 1].value;\r\n        }\r\n        // we are creating events for each card -- the way you will identify what card you have clicked\r\n        for (let cardIndex = 0; cardIndex < cardValues.length; cardIndex++) {\r\n            const card = $(\"#Card\" + cardIndex);\r\n            card.html(cardValues[cardIndex]);\r\n            card.off(\"click\", cardSetup);\r\n            card.css(\"background-color\", \"\");\r\n            card.click(cardSetup);\r\n        }\r\n        playerTurn(playerNumber);\r\n        $(\".cardArea\").css(\"visibility\", \"visible\");\r\n    });\r\n}\r\n\r\nfunction playerTurn(playerNumber) {\r\n    setupEndTurn();\r\n    $(\"#PlayerMove\").html(`Player ${playerNumber + 1}, value to beat: `);\r\n    $(\"#Move\").html(valueToBeat);\r\n}\r\n\r\nfunction cardSetup(e) {\r\n    const cardIndex = e.target.id.substr(4, 1);\r\n    const card = $(e.target);\r\n    selectCard(cardIndex, card);\r\n    console.log(\"You clicked card: \" + cardIndex);\r\n    console.log(\"This card has a value of: \" + cardValues[cardIndex])\r\n}\r\n\r\nfunction selectCard(cardIndex, card) {\r\n    // Store Card Selected Value\r\n    selectedCards[cardIndex] = !selectedCards[cardIndex];\r\n    // Change Colour\r\n    switch (card.css(\"background-color\")) {\r\n        // blue = #0288D1, rgb(2, 136, 209)\r\n        // red  = #F44336, rgb(244, 67, 54)\r\n        case \"rgb(2, 136, 209)\": // blue\r\n            card.css(\"background-color\", \"#F44336\"); // red\r\n            break;\r\n        case \"rgb(244, 67, 54)\": // red\r\n            card.css(\"background-color\", \"\"); //un-sets colour\r\n            break;\r\n    }\r\n}\r\n\r\nfunction sumOfSelectedCards() {\r\n    let sum = 0;\r\n    for (let i = 0; i < selectedCards.length; i++) {\r\n        if (selectedCards[i] === true) {\r\n            sum += cardValues[i];\r\n        }\r\n    }\r\n    return sum;\r\n}\r\n\r\nfunction changeTurn() {\r\n    playerTurnValue = (playerTurnValue + 1) % 2\r\n}\r\n\r\nfunction setupEndTurn() {\r\n    let endTurnButton = $(\"#EndTurnButton\");\r\n    endTurnButton.off(\"click\", endTurn);\r\n    endTurnButton.click(endTurn)\r\n}\r\n\r\nfunction endTurn() {\r\n    console.log(selectedCards);\r\n    let sum = sumOfSelectedCards();\r\n    if (sum > valueToBeat) {\r\n        let playerScoreDisplay = $(\"#Player\" + playerTurnValue + 1 + \"ScoreDisplay\");\r\n        playerScoreDisplay.val += 10;\r\n        changeTurn();\r\n        alert(`You are correct, you score 10 points, now it's ${playerName[playerTurnValue]}'s turn`);\r\n        setupPlayerTurn(playerTurnValue)\r\n    } else {\r\n        changeTurn();\r\n        alert(`You are incorrect, you score 0 points, now it's ${playerName[playerTurnValue]}'s turn`);\r\n        setupPlayerTurn(playerTurnValue)\r\n    }\r\n    resetSelected()\r\n}\r\n\r\nfunction resetSelected() {\r\n    for (let i = 0; i < selectedCards.length; i++) {\r\n        selectedCards[i] = false;\r\n    }\r\n}\r\n\r\n\r\nfunction setupEndGame() {\r\n    $(\"#EndGameButton\").click(function () {\r\n        window.location.reload();\r\n    });\r\n}\r\n"]}