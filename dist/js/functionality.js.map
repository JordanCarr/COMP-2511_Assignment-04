{
  "version": 3,
  "sources": [
    "../../js/functionality.js"
  ],
  "names": [
    "cardValues",
    "selectedCards",
    "valueToBeat",
    "playerTurnValue",
    "$",
    "document",
    "ready",
    "submit",
    "e",
    "loadPlayers",
    "loadCards",
    "setupEndTurn",
    "setupEndGame",
    "preventDefault",
    "html",
    "val",
    "playerTurn",
    "playerNumber",
    "playerMoveElement",
    "post",
    "done",
    "data",
    "deck",
    "parseJSON",
    "Cards",
    "value",
    "i",
    "length",
    "cardIndex",
    "card",
    "click",
    "cardSetup",
    "css",
    "target",
    "id",
    "substr",
    "selectCard",
    "console",
    "log",
    "find",
    "x",
    "alert",
    "window",
    "location",
    "reload"
  ],
  "mappings": "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",
  "file": "functionality.js",
  "sourcesContent": [
    "/**\r\n * Created by Jordan Carr on 2017-03-28.\r\n */\r\nlet cardValues = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nlet selectedCards = [false, false, false, false, false, false, false, false, false, false];\r\nlet valueToBeat = 0;\r\nlet playerTurnValue = 0;\r\n\r\n$(document).ready(function () {\r\n\r\n    // On player name submission setup game with players, cards, etc...\r\n    $(\"form.newGameForm\").submit(function (e) {\r\n        loadPlayers();\r\n        loadCards();\r\n        setupEndTurn();\r\n        setupEndGame();\r\n        e.preventDefault();\r\n    });\r\n});\r\n\r\n// Set player display to show input names and initialise player 1's turn\r\nfunction loadPlayers() {\r\n    $(\"#PlayerOneNameDisplay\").html($(\"#playerOneName\").val());\r\n    $(\"#PlayerTwoNameDisplay\").html($(\"#playerTwoName\").val());\r\n\r\n    //Game starts with player 1's turn\r\n    playerTurn(1);\r\n\r\n    $(\"#Move\").html(valueToBeat);\r\n}\r\n\r\nfunction playerTurn(playerNumber) {\r\n    const playerMoveElement = $(\"#PlayerMove\");\r\n    playerMoveElement.html(`Player ${playerNumber}, value to beat: `);\r\n}\r\n\r\nfunction loadCards() {\r\n    $.post(\"http://ins.mtroyal.ca/~nkhemka/test/process.php\").done(function (data) {\r\n        // convert POST response to a JAVASCRIPT OBJECT/variable\r\n        const deck = $.parseJSON(data);\r\n        valueToBeat = deck.Cards[0].value;\r\n        // putting all 10 card values from POST into the ARRAY- this is our game memory\r\n        for (let i = 0; i < cardValues.length; i++) {\r\n            cardValues[i] = deck.Cards[i + 1].value;\r\n        }\r\n        // we are creating events for each card -- the way you will identify what card you have clicked\r\n        for (let cardIndex = 0; cardIndex < cardValues.length; cardIndex++) {\r\n            const card = $(\"#Card\" + cardIndex);\r\n            card.html(cardValues[cardIndex]);\r\n            card.click(cardSetup);\r\n        }\r\n    });\r\n\r\n    $(\".cardArea\").css(\"visibility\", \"visible\");\r\n}\r\n\r\nfunction cardSetup(e) {\r\n    const cardIndex = e.target.id.substr(4, 1);\r\n    const card = $(e.target);\r\n    selectCard(cardIndex, card);\r\n    console.log(\"You clicked card: \" + cardIndex);\r\n    console.log(\"This card has a value of: \" + cardValues[cardIndex])\r\n}\r\n\r\nfunction selectCard(cardIndex, card) {\r\n    // Store Card Selected Value\r\n    switch (selectedCards[cardIndex]) {\r\n        case true:\r\n            selectedCards[cardIndex] = false;\r\n            break;\r\n        case false:\r\n            selectedCards[cardIndex] = true;\r\n            break;\r\n    }\r\n\r\n    // Change Colour\r\n    switch (card.css(\"background-color\")) {\r\n        // blue = #0288D1, rgb(2, 136, 209)\r\n        // red  = #F44336, rgb(244, 67, 54)\r\n        case \"rgb(2, 136, 209)\": // blue\r\n            card.css(\"background-color\", \"#F44336\"); // red\r\n            break;\r\n        case \"rgb(244, 67, 54)\": // red\r\n            card.css(\"background-color\", \"\"); //un-sets colour\r\n            break;\r\n    }\r\n}\r\n\r\nfunction setupEndTurn() {\r\n    $(\"#EndTurnButton\").click(function () {\r\n        if (!selectedCards.find(x => x === true)) {\r\n            console.log(selectedCards);\r\n            alert(\"Please select a card\");\r\n\r\n        }\r\n    })\r\n}\r\n\r\nfunction setupEndGame() {\r\n    $(\"#EndGameButton\").click(function () {\r\n        window.location.reload();\r\n    });\r\n}\r\n"
  ]
}